# -*- coding: utf-8 -*-
"""a_start_graph

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vhNH0gxiI01OTtTJriaM-ozylXne3sgB
"""

from queue import PriorityQueue

def a_star_search(graph, start, goal, heuristic):
  frontier = PriorityQueue()
  frontier.put((0, start))
  explored = set()

  while not frontier.empty():
    _, current_node = frontier.get()

    if current_node == goal:
      print("Simpul tujuan sudah ditemukan!")
      return True

    explored.add(current_node)

    for neighbor in graph[current_node]:
      cost = graph[current_node][neighbor]
      heuristic_cost = heuristic[neighbor]
      total_cost = cost + heuristic_cost
      if neighbor not in explored:
        frontier.put((total_cost, neighbor))

  print("Simpul tujuan tidak ditemukan!")
  return False

heuristic = {
    'A' : 9,
    'B' : 4,
    'C' : 2,
    'D' : 5,
    'E' : 3,
    'F' : 7,
    'G' : 0,
}

graph = {
    'S': {'A' : 3, 'E' : 2},
    'A': {'B' : 3, 'C' : 4},
    'B': {'D' : 5},
    'C': {'G' : 7},
    'D': {'G' : 3},
    'E': {'D' : 6},
}

a_star_search(graph, 'S', 'G', heuristic)