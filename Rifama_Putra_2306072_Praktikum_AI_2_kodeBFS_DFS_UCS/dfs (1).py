# -*- coding: utf-8 -*-
"""dfs

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18oUjSKlPFZve_Xl4FlPC2adodTFZyJPZ
"""

# -*- coding: utf-8 -*-
"""dfs

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZYTw-9s5FhozOSiXr9UItgFYguuF9e7h
"""

# -*- coding: utf-8 -*-
"""dfs

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bvTKyjr1P1BjShaeRXYgN5iokxi34epX

Code DFS
"""

# Python3 program to print DFS traversal
# from a given graph
from collections import defaultdict

#Kelas ini mempresentasikan sebuah graf yang diarahkan
# menggunakan representasi daftar kejadian
class graph:

  # konstruktor
    def __init__(self):

    #kamus default untuk menyimpan graf
      self.graph = defaultdict(list)

  # fungsi untuk menambahkan tepi ke graf
    def addEdge(self, u, v):
      self.graph[u].append(v)

  # fungsi yang digunakan oleh DFS
    def DFSUtil(self,v,visited):

    # tandai node saat ini sebagai sudah dikunjungi
    # dan cetak
      visited.add(v)
      print(v, end=' ')

    #panggil rekursif untuk semua titik ujung
    # yang berdekatan dengan titik ini
      for neighbour in self.graph[v]:
        if neighbour not in visited:
          self.DFSUtil(neighbour, visited)

    #Fungsi untuk melakukan penelusuran DFS. ini menggunakan
    # DFSUtil() rekursif
    def DFS(self, v):

      #buat himpunan untuk menyimpan node yang sudah dikunjungi
        visited = set()

      #Panggil fungsi bantu rekursif
      #Untuk mencetak penelusuran DFS
        self.DFSUtil(v, visited)

# Kode pengguna
if __name__ == "__main__":
  g = graph()
  g.addEdge(0, 1)
  g.addEdge(0, 2)
  g.addEdge(1, 2)
  g.addEdge(2, 0)
  g.addEdge(2, 3)
  g.addEdge(3, 3)

  print ("Berikut adalah penelusuran DEpth First (dimulai darinode 2)")

  #panggil fungsi
  g.DFS(2)

#kode ini disumbangkan oleh Neelam Yadav